<!DOCTYPE html>
<html lang="ru">
<head>
  <meta charset="UTF-8" />
  <meta name="viewport" content="width=device-width, initial-scale=1.0"/>
  <title>EGGCoin Farm</title>
  <link rel="stylesheet" href="style.css" />
</head>
<body>
  <div class="container">
    <h1>üêî EGGCoin Farm</h1>
    <p>–í–∞—à–∏ —è–π—Ü–∞: <span id="eggCount">0</span> ü•ö</p>

    <div id="chickenWrapper">
      <img src="chicken.png" alt="Chicken" id="chicken" draggable="false" />
    </div>

    <p>–¢–∞–ø–Ω–∏—Ç–µ –ø–æ –∫—É—Ä–∏—Ü–µ, —á—Ç–æ–±—ã –∑–∞—Ä–∞–±–æ—Ç–∞—Ç—å —è–π—Ü–∞!</p>

    <p>–ö—É—Ä–∏—Ü —É –≤–∞—Å: <span id="chickenCount">1</span></p>
    <button id="buyChicken">–ö—É–ø–∏—Ç—å –∫—É—Ä–∏—Ü—É (1000 ü•ö)</button>

    <hr />

    <button id="shareButton">–ü–æ—Å–æ–≤–µ—Ç–æ–≤–∞—Ç—å –¥—Ä—É–≥—É (–ø–æ–ª—É—á–∏—Ç—å 10‚ÄØ000 ü•ö)</button>
    <p id="shareMessage"></p>
  </div>

  <!-- –ü–∞–Ω–µ–ª—å HUD -->
  <div class="hud-bar">
    <img src="icon_home.png" alt="–ì–ª–∞–≤–Ω–∞—è" class="hud-icon" />
    <img src="icon_stats.png" alt="–°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞" class="hud-icon" />
    <img src="icon_shop.png" alt="–ú–∞–≥–∞–∑–∏–Ω" class="hud-icon" />
    <img src="icon_profile.png" alt="–ü—Ä–æ—Ñ–∏–ª—å" class="hud-icon" />
    <img src="icon_menu.png" alt="–ú–µ–Ω—é" class="hud-icon" />
  </div>

  <!-- –ö–æ–Ω—Ç–µ–π–Ω–µ—Ä –¥–ª—è –∞–Ω–∏–º–∞—Ü–∏–∏ —è–∏—Ü -->
  <div id="eggAnimationContainer"></div>

  <!-- –°–∫—Ä–∏–ø—Ç –æ–±—è–∑–∞—Ç–µ–ª—å–Ω–æ –≤ —Å–∞–º–æ–º –∫–æ–Ω—Ü–µ -->
  <script src="script.js"></script>
</body>
</html>

‚úÖ style.css
let eggCount = 0;
let chickens = 1;

const chicken = document.getElementById("chicken");
const eggCounter = document.getElementById("eggCount");
const chickenCount = document.getElementById("chickenCount");
const buyChicken = document.getElementById("buyChicken");
const shareButton = document.getElementById("shareButton");
const shareMessage = document.getElementById("shareMessage");
chicken.addEventListener("dragstart", (e) => e.preventDefault());

let hasShared = false;

// –ö–ª–∏–∫ –ø–æ –∫—É—Ä–∏—Ü–µ
chicken.addEventListener("click", () => {
  eggCount += chickens;
  eggCounter.textContent = eggCount;
});

// –ü–æ–∫—É–ø–∫–∞ –∫—É—Ä–∏—Ü—ã
buyChicken.addEventListener("click", () => {
  if (eggCount >= 1000) {
    eggCount -= 1000;
    chickens++;
    eggCounter.textContent = eggCount;
    chickenCount.textContent = chickens;
  } else {
    alert("–ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ —è–∏—Ü –¥–ª—è –ø–æ–∫—É–ø–∫–∏ –∫—É—Ä–∏—Ü—ã!");
  }
});

// –ë–æ–Ω—É—Å –∑–∞ —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏—é
shareButton.addEventListener("click", async () => {
  if (hasShared) {
    shareMessage.textContent = "–¢—ã —É–∂–µ –ø–æ–ª—É—á–∏–ª –±–æ–Ω—É—Å –∑–∞ –ø—Ä–∏–≥–ª–∞—à–µ–Ω–∏–µ.";
    return;
  }

  if (navigator.share) {
    try {
      await navigator.share({
        title: "–ò–≥—Ä–∞–π –≤ EGGCoin!",
        text: "–¢–∞–ø–∞–π –∫—É—Ä–∏—Ü—É –∏ –∑–∞—Ä–∞–±–∞—Ç—ã–≤–∞–π —è–π—Ü–∞!",
        url: window.location.href
      });
      eggCount += 10000;
      eggCounter.textContent = eggCount;
      shareMessage.textContent = "–°–ø–∞—Å–∏–±–æ! –¢—ã –ø–æ–ª—É—á–∏–ª 10‚ÄØ000 —è–∏—Ü ü•ö";
      hasShared = true;
    } catch (err) {
      shareMessage.textContent = "–ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–¥–µ–ª–∏—Ç—å—Å—è.";
    }
  } else {
    shareMessage.textContent = "–ü–æ–¥–µ–ª–∏—Ç—å—Å—è –º–æ–∂–Ω–æ —Ç–æ–ª—å–∫–æ —Å —Ç–µ–ª–µ—Ñ–æ–Ω–∞.";
  }
});

const eggContainer = document.getElementById("eggAnimationContainer");

chicken.addEventListener("click", (event) => {
  const egg = document.createElement("div");
  egg.className = "flying-egg";
  egg.textContent = "ü•ö";

  const rect = chicken.getBoundingClientRect();
  const x = event.clientX;
  const y = event.clientY;

  egg.style.left = `${x}px`;
  egg.style.top = `${y}px`;

  eggContainer.appendChild(egg);

  setTimeout(() => {
    egg.remove();
  }, 1000);
});